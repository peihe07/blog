<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>筆記 on My New Hugo Site</title>
    <link>http://localhost:1313/categories/%E7%AD%86%E8%A8%98/</link>
    <description>Recent content in 筆記 on My New Hugo Site</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 24 Jan 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/%E7%AD%86%E8%A8%98/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Django筆記</title>
      <link>http://localhost:1313/notes/2025-01-24-django_notes_outline/</link>
      <pubDate>Fri, 24 Jan 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/2025-01-24-django_notes_outline/</guid>
      <description>&lt;h1 id=&#34;django-學習筆記&#34;&gt;Django 學習筆記&lt;/h1&gt;&#xA;&lt;h2 id=&#34;1-django-基礎概念&#34;&gt;1. Django 基礎概念&lt;/h2&gt;&#xA;&lt;h3 id=&#34;11-什麼是-django&#34;&gt;1.1 什麼是 Django&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;Web 框架簡介&lt;/strong&gt;&#xA;Django 是一個高階的 Python Web 框架，鼓勵快速開發和乾淨、實用的設計。它由經驗豐富的開發者構建，解決了 Web 開發的許多麻煩，讓你可以專注於編寫應用程式而無需重新發明輪子。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Django 的設計哲學&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;DRY（Don&amp;rsquo;t Repeat Yourself）&lt;/strong&gt;：避免重複代碼，提高代碼重用性&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;快速開發&lt;/strong&gt;：從概念到完成儘可能快速&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Clean Design&lt;/strong&gt;：鼓勵乾淨、實用的設計&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;MVT 架構模式（Model-View-Template）&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Model&lt;/strong&gt;：資料層，定義資料結構和業務邏輯&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;View&lt;/strong&gt;：控制層，處理用戶請求並返回回應&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Template&lt;/strong&gt;：展示層，負責用戶界面的呈現&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;Django 的優勢與特色&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;內建管理介面&lt;/li&gt;&#xA;&lt;li&gt;強大的 ORM 系統&lt;/li&gt;&#xA;&lt;li&gt;完善的安全機制&lt;/li&gt;&#xA;&lt;li&gt;豐富的內建功能&lt;/li&gt;&#xA;&lt;li&gt;活躍的社群支援&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;12-環境建置&#34;&gt;1.2 環境建置&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;Python 環境需求&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 檢查 Python 版本（建議 3.8+）&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python --version&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 --version&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;虛擬環境設置&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 使用 venv 建立虛擬環境&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python -m venv django_env&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 啟動虛擬環境&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Windows&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;django_env&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;cripts&lt;span style=&#34;color:#ae81ff&#34;&gt;\a&lt;/span&gt;ctivate&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# macOS/Linux&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;source django_env/bin/activate&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 停用虛擬環境&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;deactivate&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Django 安裝&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vue.js</title>
      <link>http://localhost:1313/notes/2024-12-30-vue_notes/</link>
      <pubDate>Mon, 30 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/2024-12-30-vue_notes/</guid>
      <description>&lt;h1 id=&#34;vuejs-專案結構與檔案詳細說明&#34;&gt;Vue.js 專案結構與檔案詳細說明&lt;/h1&gt;&#xA;&lt;p&gt;以下解析一個使用 Vue CLI 建立的典型前端 Vue.js 專案結構，並說明各個檔案與資料夾的作用與必要性。&lt;/p&gt;&#xA;&lt;h2 id=&#34;目錄&#34;&gt;目錄&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#1-%E5%B0%88%E6%A1%88%E6%A0%B9%E7%9B%AE%E9%8C%84%E6%AA%94%E6%A1%88&#34;&gt;1. 專案根目錄檔案&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#2-public-%E8%B3%87%E6%96%99%E5%A4%BE&#34;&gt;2. public 資料夾&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#3-src-%E8%B3%87%E6%96%99%E5%A4%BE&#34;&gt;3. src 資料夾&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#4-%E5%85%B6%E4%BB%96%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A%E6%AA%94&#34;&gt;4. 其他環境設定檔&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;1-專案根目錄檔案&#34;&gt;1. 專案根目錄檔案&lt;/h2&gt;&#xA;&lt;h3 id=&#34;packagejson&#34;&gt;package.json&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;功能說明：&lt;/strong&gt;&lt;br&gt;&#xA;記錄專案的元資料、依賴套件、開發與生產環境的指令（例如 &lt;code&gt;serve&lt;/code&gt;、&lt;code&gt;build&lt;/code&gt;、&lt;code&gt;test&lt;/code&gt;）等設定。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;為什麼需要：&lt;/strong&gt;&lt;br&gt;&#xA;統一管理專案的相依套件與腳本，方便團隊成員建立與執行開發環境。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;package-lockjson--yarnlock&#34;&gt;package-lock.json / yarn.lock&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;功能說明：&lt;/strong&gt;&lt;br&gt;&#xA;鎖定專案所使用的套件版本，確保在不同環境中安裝的版本一致。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;為什麼需要：&lt;/strong&gt;&lt;br&gt;&#xA;避免因版本不一致而導致錯誤，保持團隊開發的一致性。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;readmemd&#34;&gt;README.md&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;功能說明：&lt;/strong&gt;&lt;br&gt;&#xA;提供專案簡介、安裝步驟、使用說明以及其他相關資訊。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;為什麼需要：&lt;/strong&gt;&lt;br&gt;&#xA;讓新進成員或使用者能夠快速了解並上手專案。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;vueconfigjs-可選&#34;&gt;vue.config.js (可選)&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;功能說明：&lt;/strong&gt;&lt;br&gt;&#xA;用於覆寫 Vue CLI 預設的 Webpack 配置，例如設定代理、路徑別名、資源目錄等。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;為什麼需要：&lt;/strong&gt;&lt;br&gt;&#xA;提供彈性，讓你能根據專案需求調整建置流程與設定。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;2-public-資料夾&#34;&gt;2. public 資料夾&lt;/h2&gt;&#xA;&lt;h3 id=&#34;indexhtml&#34;&gt;index.html&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;功能說明：&lt;/strong&gt;&lt;br&gt;&#xA;專案的主要 HTML 模板，Vue.js 應用會注入到此文件中預先定義好的掛載點（通常是 &lt;code&gt;&amp;lt;div id=&amp;quot;app&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;為什麼需要：&lt;/strong&gt;&lt;br&gt;&#xA;作為單頁應用（SPA）的入口點，決定初始 HTML 結構與靜態內容。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;其他靜態資源&#34;&gt;其他靜態資源&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;功能說明：&lt;/strong&gt;&lt;br&gt;&#xA;放置不需要經過 Webpack 處理的靜態檔案，如 favicon、外部庫文件或其他第三方資源。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;為什麼需要：&lt;/strong&gt;&lt;br&gt;&#xA;確保這些檔案在最終建置時能夠原封不動地複製到輸出目錄，並正確載入。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;3-src-資料夾&#34;&gt;3. src 資料夾&lt;/h2&gt;&#xA;&lt;h3 id=&#34;mainjs&#34;&gt;main.js&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;功能說明：&lt;/strong&gt;&lt;br&gt;&#xA;專案的主要進入點，初始化 Vue 實例，整合路由（Vue Router）、狀態管理（Vuex）等，並將根元件掛載到 DOM 中。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;為什麼需要：&lt;/strong&gt;&lt;br&gt;&#xA;建立與啟動整個 Vue 應用，是專案運行的核心。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;appvue&#34;&gt;App.vue&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;功能說明：&lt;/strong&gt;&lt;br&gt;&#xA;根元件，作為應用的主要容器，通常包含全局佈局與樣式，並嵌入其他子元件。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;為什麼需要：&lt;/strong&gt;&lt;br&gt;&#xA;統一管理應用結構與佈局，作為其他元件的父容器。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;assets-資料夾&#34;&gt;assets 資料夾&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;功能說明：&lt;/strong&gt;&lt;br&gt;&#xA;存放圖片、字體、CSS 檔案或其他需要經過 Webpack 處理的靜態資源。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;為什麼需要：&lt;/strong&gt;&lt;br&gt;&#xA;讓這些資源能夠在編譯時進行優化、壓縮與管理，提升效能與可維護性。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;components-資料夾&#34;&gt;components 資料夾&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;功能說明：&lt;/strong&gt;&lt;br&gt;&#xA;存放可重用的 Vue 元件，每個元件通常是一個 &lt;code&gt;.vue&lt;/code&gt; 檔案，包含模板、邏輯與樣式。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;為什麼需要：&lt;/strong&gt;&lt;br&gt;&#xA;模組化應用開發，將 UI 與功能拆分成獨立且可重用的元件，增強維護性與開發效率。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;views-或-pages-資料夾&#34;&gt;views (或 pages) 資料夾&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;功能說明：&lt;/strong&gt;&lt;br&gt;&#xA;當應用較大時，可以將不同的頁面（視圖）存放在此處，通常與路由配置相對應。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;為什麼需要：&lt;/strong&gt;&lt;br&gt;&#xA;區分單頁應用（SPA）中的不同路由頁面，保持結構清晰。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;router-資料夾&#34;&gt;router 資料夾&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;功能說明：&lt;/strong&gt;&lt;br&gt;&#xA;存放路由設定文件（通常是 &lt;code&gt;index.js&lt;/code&gt;），定義各個 URL 路徑與對應的元件。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;為什麼需要：&lt;/strong&gt;&lt;br&gt;&#xA;管理前端路由，讓應用能夠根據 URL 變化載入不同頁面與元件。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;store-資料夾&#34;&gt;store 資料夾&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;功能說明：&lt;/strong&gt;&lt;br&gt;&#xA;若使用 Vuex 管理應用狀態，則在此資料夾中定義 state、mutations、actions 與 getters 等。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;為什麼需要：&lt;/strong&gt;&lt;br&gt;&#xA;集中管理應用狀態，方便元件之間的資料共享與同步。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;utils-或-services-資料夾-可選&#34;&gt;utils 或 services 資料夾 (可選)&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;功能說明：&lt;/strong&gt;&lt;br&gt;&#xA;存放工具函數、API 請求封裝、數據處理邏輯等常用功能模組。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;為什麼需要：&lt;/strong&gt;&lt;br&gt;&#xA;將常用功能模組化，減少重複程式碼，提升專案可維護性與擴展性。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;4-其他環境設定檔&#34;&gt;4. 其他環境設定檔&lt;/h2&gt;&#xA;&lt;h3 id=&#34;envenvdevelopmentenvproduction-等&#34;&gt;.env、.env.development、.env.production 等&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;功能說明：&lt;/strong&gt;&lt;br&gt;&#xA;定義不同環境下的環境變數，例如 API 基本路徑、除錯模式等設定。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;為什麼需要：&lt;/strong&gt;&lt;br&gt;&#xA;讓專案能夠根據部署環境輕鬆調整配置，而無需修改程式碼。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;vuejs-進階應用與生態系統補充說明&#34;&gt;Vue.js 進階應用與生態系統補充說明&lt;/h1&gt;&#xA;&lt;p&gt;除了基礎的專案結構與檔案說明，Vue.js 生態系統提供了許多進階工具與最佳實踐，能協助你建立更高效、彈性及易於維護的前端應用。以下補充一些常見的延伸主題與應用情境：&lt;/p&gt;</description>
    </item>
    <item>
      <title>從我的七把鍵盤來淺談機械式鍵盤</title>
      <link>http://localhost:1313/writings/2023-08-24-3b6980729642/</link>
      <pubDate>Thu, 24 Aug 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/writings/2023-08-24-3b6980729642/</guid>
      <description>&lt;p&gt;入鍵圈兩年多要來介紹機械式鍵盤，我還算是太淺了，所以我決定從我與我的七把鍵盤入手當作主軸來一一切入各種我想要聊的題目。&lt;/p&gt;&#xA;&lt;p&gt;以前買電腦附的鍵盤多為薄膜式鍵盤，而知名水果電腦的筆電鍵盤則為剪刀腳鍵盤，那何謂機械式鍵盤？機械式鍵盤就是每個按鍵都是獨立的軸體，可以拆卸替換，部分為焊接或是熱插拔(無須焊接換軸)的形式固定在電路板上。&lt;/p&gt;&#xA;&lt;p&gt;先來講一個關於我怎麼知道機械式鍵盤的小故事，那是在某天滑推特(現在叫X)的時候，正好看到推友碰氣大欸貼了一個ducky的鍵盤猶豫著要不要買，推文下方有喜歡的作家推友說ducky好用，又看到其他推友的各種推坑，我就好奇開始查了這個牌子，那時候連什麼軸都分不出來，只是用外表判斷，看到海灘假期的那刻，我就知道我戀愛了，怎麼會有這麼好看的鍵盤!&lt;/p&gt;&#xA;&lt;p&gt;猶豫了好久最後在PCParty買下了我人生中的第一把機械式鍵盤。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;1ducky-one-2-海灘假期-青軸-2990元&#34;&gt;1.Ducky One 2 海灘假期 青軸 2990元&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*oKRsD6FpeJpdxJLPavaprQ.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;第一把當然就是要買最吵的青軸，當時想著我都在家裡使用，很吵也沒關係吧，而且鍵盤就是要這麼吵阿喀搭喀搭的。&lt;/p&gt;&#xA;&lt;p&gt;這把鍵盤是Cherry的MX軸的青軸，至於什麼事青軸呢？&lt;/p&gt;&#xA;&lt;p&gt;第一個來談的就是&lt;strong&gt;軸體&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;一般來說要入手最基本的機械式鍵盤軸體通常用打感和聲音來分&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;1️⃣&lt;/em&gt;&#xA;&lt;em&gt;&lt;strong&gt;打感&lt;/strong&gt;&lt;/em&gt;*:通常分為&lt;strong&gt;&lt;strong&gt;線性軸&lt;/strong&gt;&lt;/strong&gt;和&lt;strong&gt;&lt;strong&gt;段落軸&lt;/strong&gt;&lt;/strong&gt;，線性有紅軸、銀軸更重的還有黑軸，而段落通常是青軸以及茶軸。何謂段落感?就是你壓下按鍵的時候，會感受到一段一段的感覺，很像是按下原子筆喀喀的感覺，配合下方的圖應該可以很明顯看出來，青軸在下壓過程多了一個咖搭下壓的感覺。*&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;以下摘錄自&lt;/em&gt;&#xA;&lt;a href=&#34;https://www.keyboardco.com/blog/index.php/2012/12/an-introduction-to-cherry-mx-mechanical-switches/&#34;&gt;&lt;em&gt;https://www.keyboardco.com/blog/index.php/2012/12/an-introduction-to-cherry-mx-mechanical-switches/&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/600/0*qozR8ri5oI_CMDMx.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/600/0*JgLEVkathvoicCiY.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;2️⃣&lt;/em&gt;&lt;em&gt;&lt;strong&gt;敲擊聲&lt;/strong&gt;&lt;/em&gt;*:敲擊聲通常就分為清脆和沒那麼清脆，有的人形容說是安靜，但我覺得什麼軸都有人覺得吵，應該沒有安靜的軸體。從下壓的的畫面應該可以猜出哪個軸體比較容易有聲音吧，當然是會咖搭下壓的青軸，青軸的觸發克數約為50g，算是中等，在觸發點的時候有明確的段落感，就像是傳統打字機發出來的聲音，按壓回饋感以及聲音很明確，受到文字工作者的愛好。我覺得他很像鍵盤軸裡的青少年，吵死了可是打起來好爽，使用青軸鍵盤通常會成為辦公室的討厭對象。*&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;再來稍微小聲一點，是擁有輕盈段落感的茶軸，下手時不會感到負擔，又可以得到回饋，是機械式鍵盤裡最熱門的軸體。想體驗機械式鍵盤的打感，又不想要太招搖，但我還是讓你知道一下我在用機械式鍵盤捏，選茶軸就對了，是最中規中矩的選擇。&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;接下來是紅軸，紅軸的觸發克數非常輕，打起來相對安靜，觸發的也很快，快速擊發的遊戲玩家應該都會選擇紅軸，紅軸比較像是低調有錢人的款式，我很有錢喔但我都安靜默默花錢。&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;黑軸以及綠軸還有聽起來更高級感的銀軸以及改良版的紅軸靜音紅，我比較少接觸到，這裡我們先不談。&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;這把鍵盤使用的是Cherry&#xA;MX軸系列的青軸，MX是Cherry這間德國公司設計，在1894年推出來的一種系列軸，也就是在軸心上方有十字的凸起，現今各家的軸體也多為MX的設計。&lt;/p&gt;&#xA;&lt;p&gt;在這時候我對鍵盤的了解也大概就停在知道軸體的部分，多數人了解機械式鍵盤也都差不多碰到這塊就停止了。這把青軸鍵盤的確也是吵也很爽，但久了也不覺得有什麼特別的，逐漸的在家裡聽到敲擊聲已經沒辦法滿足我，開始動了歪腦筋到辦公室的鍵盤上。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;2-irocks-k61m-rgb-背光-紅軸-1699元&#34;&gt;2. &lt;strong&gt;irocks K61M&lt;/strong&gt; RGB 背光 紅軸 1699元&lt;/h3&gt;&#xA;&lt;p&gt;如果要入手機械式鍵盤，又還不想花超過兩千以上購買，那我會推薦irocks的鍵盤。這把相對比較便宜大概是因為軸體的關係，我是選中國牌子的軸體佳達隆，很多人在多數的生活用品使用上會排斥中國品牌的產品，認為比較不耐用或不好用，甚至到盡量避免中國製，但在鍵圈裡，由於中國鍵圈發展的十分蓬勃，各種軸體鍵帽鍵盤不斷推陳出新，多數人都會願意嘗試較低價且新穎的中國的軸體或鍵帽，能夠花最少的錢體驗到新東西很難拒絕吧。&lt;/p&gt;&#xA;&lt;p&gt;佳達隆的紅軸我打過之後很滿意，由於上一把是青軸，這把使用起來完全是不同的體驗，他輕巧順暢好打又算安靜，唯一唯一不是很滿意的地方是RGB(對我來說)，我在辦公室用RGB燈光幹嘛呢www&lt;/p&gt;&#xA;&lt;p&gt;這把鍵盤給我用著實很浪費，因為RGB才是他的主打，使用懸浮式的設計窄邊框，環繞燈光背光特效還有單色恆亮，可以光跡追蹤，就是你可以想像到的最炫的鍵盤了，如果沒預算買到羅技或是海盜船那種炫泡的RGB鍵盤，那這個K61M很適合。後來這把就給男友用，還幫他換了很油的鍵帽，因為沒有特別幫他留念，所以給大家看一下鍵帽。這把K61M還有附手托，實在太香了啦，和明日香一樣&amp;gt;&amp;lt;。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*f-F1mv8lMqmAwKeRfc3ccw.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;3-filco-ninja-majestouch-2-忍者tkl-茶軸-3680元&#34;&gt;3. Filco NINJA Majestouch 2 忍者TKL 茶軸 3680元&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;鍵圈有句話:「你遲早都要入教的，何不直上LF？」&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*8g-mdzulHHWQOYksAWRqag.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;沒錯，真的是遲早都要入教的，大F和大L在量產的機械式鍵盤裡是有名的信仰，F是Filco，L是Leopold。&lt;/p&gt;&#xA;&lt;p&gt;在兩把鍵盤已經沒辦法滿足我了(?)的狀況下，開始偷偷看起了大F，入門前很糾結在價格，Filco對新手來說真的是很貴，加上沒有信仰，所以還是從ducky入手了，不過ducky也不算便宜&amp;gt;&amp;lt;。但在已經有兩把鍵盤的前提下當時對我來說，是好想知道到底有多好打而不是收集鍵盤，就是鍵盤而已同樣是Cherry軸還能夠有多好打，哼買來打打看阿。&lt;/p&gt;&#xA;&lt;p&gt;這把購買的是Cherry茶軸，還真的是很好打，好打極了。大F通常大家推薦的就是忍者系列的茶軸，而大L則是紅軸，由於大L系列的紅軸我沒有試過，這裡就先不討論。而後面會再提我之後有再購買了一把ducky的茶軸，相較之下，平平是Cherry茶軸，大F就是好打，真的沒話說。為什麼會這樣呢?&lt;/p&gt;&#xA;&lt;p&gt;差別就在於&lt;strong&gt;鍵帽&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;常見的鍵帽分成兩種材質:&lt;strong&gt;&lt;strong&gt;ABS&lt;/strong&gt;&lt;/strong&gt;和&lt;/em&gt;&lt;em&gt;&lt;strong&gt;PBT&lt;/strong&gt;&lt;/em&gt;*，第三種為比較不常見的POM。*&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;ABS&lt;/strong&gt;&lt;/em&gt;&lt;em&gt;是易加工易成型的材料，通常是最多鍵盤商會選擇採納的材質，表面滑順摩擦力小，容易做成透光鍵帽，顏色呈現上較漂亮，但不耐熱，ABS最容易遇到的就是打油，應該很常看到鍵帽上的字不見了，然後鍵帽表面光滑亮亮的鍵盤吧，那就是打油。&lt;strong&gt;&lt;strong&gt;PBT&lt;/strong&gt;&lt;/strong&gt;是相對下較耐用的材質，抗油能力強，成形之後比較脆更為安定，因為他能承受的溫度比較高，通常都使用熱昇華印上去，會有一層細膩的磨砂感。&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;ABS鍵帽打起來真的有比較軟感覺很神奇，你知道他們都是塑形後的固體，可是觸碰下去就是可以感受到其中的差異，正所謂硬中帶軟。大F是使用ABS鍵帽，Ducky通常是使用PBT鍵帽，ABS鍵帽中的滑順感以及做工的差異影響了打起來的手感，才會有這麼大的差異。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
